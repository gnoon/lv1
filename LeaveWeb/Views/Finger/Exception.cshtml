@section ScriptsContents {
	@{
		var ContentsRequired = new ViewDataDictionary
		{
				{"jquery.ui.menu",true},
				{"jquery.alphanum",true},
				{"jquery.ui.autocomplete",true}
		};
		Html.RenderPartial("~/Views/Shared/_Core.cshtml", ContentsRequired);
	}
	<script type="text/javascript">
		// Global Variable
		var ObjectPerson = [];

		$(window).load(function () {
			$.ajax({
				 url: '@Url.Action("AjaxGetPersonAutoComplete", "Setting")'
				,type: "POST"
				,async: true
				,data: {}
				,dataType: "json"
				,success: function(data, textStatus, jqXHR) {
					try {
						for(i=0; i<data.results.persons.length; i++) {
							ObjectPerson.push(data.results.persons[i]);
						}
					} catch (e) {
						window.console && console.log("Push Object/HTML: " + e.toString());
					}
				}
				,error: function(jqXHR, textStatus, errorThrown) {
					window.console && console.log("Push Autocomplete (ajax): " + textStatus);
				}
			});
		});
		
		$(document).ready(function () {
			$("#tabs").tabs();
			$("#Person-Grid").jqGrid({
				 url: '@Url.Action("AjaxListException", "Finger")'
				,mtype: "POST"
				,datatype: "json"
				,width: "auto"
				,height: 350
				,caption: "<em>รายชื่อพนักงาน</em>"
				,colNames: ["ID","รหัส","ชื่อ - สกุล","สังกัด","ตำแหน่ง"]
				,colModel: [
					{name:"PersonNo",index:"PersonNo",hidden:true,editable:true},
					{name:"EmployeeNo",index:"EmployeeNo",width:60,align:"center",sortable:true,resizable:false},
					{name:"PersonName",index:"PersonName",width:180,sortable:true,resizable:true,editable:true,
					 editoptions:{size:50,dataInit:function(elem){setPersonAutoComplete(elem);}},editrules:{required:true}},
					{name:"SectionName",index:"SectionName",width:180,sortable:true,resizable:true},
					{name:"PositionName",index:"PositionName",width:180,sortable:true,resizable:true}
				]
				,altRows: true
				,altclass: "oddColor"
				,pager: "#Person-Grid-nav"
				,rowNum: 999
				,rowList: []					// disable page size dropdown [10,20,30]
				,pgtext: null					// disable pager text like 'Page 0 of 10'
				,pgbuttons: false			// disable page control like next, back button
				,viewrecords: true		// display the total number of records
				,sortname: null
				,sortorder: "asc"
				,rownumbers: true
				,gridview: true
				,autoencode: true
				,ignoreCase: true
				,loadComplete: function(data) {}
			}).navGrid("#Person-Grid-nav"
				,{edit: false, add: true, del: true, refresh: false, search: false} // an array of settings
				,{} // settings for edit
				,{  // settings for add
					 url: '@Url.Action("AjaxSetException", "Finger")'
					,serializeEditData: function(postdata) {
						var rowid = $("#Person-Grid").jqGrid("getGridParam", "selrow");
						var rec = $("#Person-Grid").jqGrid("getRowData", rowid);
						return { oper: postdata.oper, PersonNo: postdata.PersonNo };
					}
					,width: "450"
					,closeOnEscape: true
					,closeAfterAdd: true
					,reloadAfterSubmit: false
					,afterShowForm: function(form) {
						$(form).find(".CaptionTD").css({"text-align":"right"});
					}
					,afterComplete: function(response, postdata) {
						var data = $.parseJSON(response.responseText);
						if(eval(data.error) || data.records < 1) alert("ERROR.");
						$(this).trigger("reloadGrid");
					}
				}
				,{  // settings for delete
					 url: '@Url.Action("AjaxSetException", "Finger")'
					,serializeDelData: function(postdata) {
						var rec = $(this).getRowData(postdata.id);
						return { oper: postdata.oper, PersonNo: rec.PersonNo };
					}
					,closeOnEscape: true
					,reloadAfterSubmit: false
					,onclickSubmit: function(rp_ge, rowid) {}
					,afterComplete: function(response, postdata) {
						var data = $.parseJSON(response.responseText);
						if(eval(data.error) || data.records < 1) alert("ERROR.");
						$(this).trigger("reloadGrid");
					}
				}
				,{} // settings for search
				,{} // settings for view
			)/*.filterToolbar({ stringResult: true, searchOnEnter: true, defaultSearch: "cn" })*/;

		});

		function setPersonAutoComplete(elem) {
			$(elem).autocomplete({
				 minLength: 2
				,source: ObjectPerson
				,open: function (event, ui) {
					$("ul.ui-autocomplete li:odd").addClass("oddColor");
					$("ul.ui-autocomplete li:even").addClass("evenColor");
					$("ul.ui-autocomplete li a").css({"font-size":"13px"});
					$("ul.ui-autocomplete li").css({"border":"1px solid #a6c9e2","margin-top":"-1px"});
				}
				,focus: function(event, ui) {
					$(this).val(ui.item.label);
					return false;
				}
				,select: function(event, ui) {
					$(this).val(ui.item.label);
					$(this).parents("form:first").find("#PersonNo").val(ui.item.value);
					return false;
				}
				,change: function (event, ui) {
          if(!ui.item) {
            $(this).val("");
						$(this).parents("form:first").find("#PersonNo").val("");
          }
        }
			});
		}

	</script>
	@{Html.RenderPartial("~/Views/Shared/_Scripts.cshtml");}
}
<div class="m-ui-tabs">
  <div id="tabs" role="adjust-height">
	  <ul>
		  <li><a href="#tabs-1"><span>รายชื่อพนักงานยกเว้นการสแกนนิ้วมือ</span></a></li>
	  </ul>
    <div id="tabs-1">
      <div class="ui-inner-panel" style="padding-left:10px;padding-top:10px;">
				<div>
					<table id="Person-Grid"></table>
					<div id="Person-Grid-nav"></div>
				</div>
			</div>
    </div>
  </div>
</div>